#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/io.h>

#define SPP_MODE	0x00
#define ECP_MODE	0x60
#define EPP_MODE	0x80

int main(int argc, char *argv[]) {
	unsigned int ecr;
	unsigned char reg;

	if (argc != 2) {
		printf("No ECR address\n");
		exit(1);
	}
	// get the ECR address from the commandline
	// for most parallel port, this addres is base_hi + 2
	ecr = strtol(argv[1], NULL, 16);
	printf("ECR address: 0x%04x\n", ecr);

	// request to access to the address space
	if (iopl(3)) {
		perror("iopl");
		exit(2);
	}

	// request to write access to ECR 
	if (ioperm(ecr, 1, 1)) {
		perror("ioperm");
		exit(3);
	}

	// read from ECR
	reg = inb_p(ecr);
	printf("initial read: 0x%02x\n", reg);

	// change mode
	reg = reg & 0x1F;
	reg = reg | EPP_MODE;
	printf("write: 0x%02x\n", reg);

	// write to ECR
	outb(reg, ecr);
	usleep(100000);

	// read from ECR
	reg = inb_p(ecr);
	printf("final read: 0x%02x\n", reg);

	// release to write privilege
	if (ioperm(ecr, 1, 0)) {
		perror("ioperm1");
		exit(4);
	}

	exit(0);
}
