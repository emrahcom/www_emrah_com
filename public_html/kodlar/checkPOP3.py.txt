#!/usr/bin/python
# -*- coding:utf-8 -*-

# zenity paketini yuklenmesi gerekiyor.

import getpass
import poplib
import time
import os
from email.header import decode_header
import logging
logging.basicConfig(filename='/tmp/check_gmail.log',level=logging.DEBUG)


INITIAL_WAIT    = 10
PERIOD          = 300
HOST            = 'pop.gmail.com'
DEBUG           = 2



# -----------------------------------------------------------------------------
def getLoginInfo():
    username = raw_input('Username : ')
    password = getpass.getpass('Pasword  : ')

    logging.debug('username : %s' % username)
    return (username, password)



# -----------------------------------------------------------------------------
def getMailInfo(username, password, pid):
    maillist = []

    try:
        pop = poplib.POP3_SSL(HOST)
        pop.user(username)
        pop.pass_(password)

        num = len(pop.list()[1])
        for n in range(num):
            mTo = mCc = mDate = mFrom = mSubject = ''

            for satir in pop.retr(n+1)[1]:
                try:
                    data = [row[0].decode(row[1] or 'iso-8859-1')
                             for row in decode_header(satir)]

                    if data[0].lower() == 'from:':
                        mFrom = ' '.join(data)
                    elif data[0].lower() == 'to:':
                        mTo = ' '.join(data)
                    elif data[0].lower() == 'cc:':
                        mCc = ' '.join(data)
                    elif data[0].lower() == 'date:':
                        mDate = ' '.join(data)
                    elif data[0].lower() == 'subject:':
                        mSubject = ' '.join(data).strip()
                except Exception, err:
                    pass

                # Gerekli kisimlar alindiysa, bu emaili gec.
                if (mTo and mDate and mFrom and mSubject) :
                    break

            if mSubject[0:6] == 'rapor:': continue
            if mSubject[0:13] == 'Twitter Trend': continue
            if mSubject[0:23] == '=?utf-8?q?Twitter Trend': continue
            maillist.append([n+1, mFrom, mTo, mCc, mDate, mSubject])

        pop.quit()
    except poplib.error_proto:
        if DEBUG:
            raise
        else:
            command = "zenity --error --text '"
            command += "Connection failed for <b>%s</b>\n" % (username)
            command += "Pid... [%s]" % (pid)
            command += "' &"

            logging.debug('getMailInfo1 : %s' % command)
            os.system(command)
    except Exception, err:
        if DEBUG:
            raise
        else:
            command = "zenity --error --text '"
            command += "Error for <b>%s</b>\n" % (username)
            command += "Pid... [%s]\n" % (pid)
            command += "%s" % (str(err))
            command += "' &"

            logging.debug('getMailInfo2 : %s' % command)
            os.system(command)

    return maillist



# -----------------------------------------------------------------------------
def secureMessage(message):
    message = message.replace('"','&quot;')
    message = message.replace('<','&lt;')
    message = message.replace('>','&gt;')

    return message



# -----------------------------------------------------------------------------
def showDialog(username, maillist, pid):
    try:
        if not maillist: return None

        msg = ''
        for mail in maillist:
            msg += u'<b>From   :</b> %s\n' % \
                secureMessage(mail[1])
            msg += '<b>To     :</b> %s\n' % \
                secureMessage(mail[2])
            msg += '<b>CC     :</b> %s\n' % \
                secureMessage(mail[3])
            msg += '<b>Date   :</b> %s\n' % \
                secureMessage(mail[4])
            msg += '<b>Subject:</b> %s\n' % \
                secureMessage(mail[5])
            msg += '-------------------------------\n'
        msg += '%s... [%s]' % (username, pid)
        command = 'zenity --info --text "%s" &' % msg

        logging.debug('showDialog1 : %s' % command)
        os.system(command.encode('utf-8'))
    except Exception, err:
        if DEBUG:
            raise
        else:
            command = "zenity --error --text '"
            command += "Error for <b>%s</b>\n" % (username)
            command += "Pid... [%s]\n" % (pid)
            command += "%s" % (str(err))
            command += "' &"

            logging.debug('showDialog2 : %s' % command)
            os.system(command)



# -----------------------------------------------------------------------------
def startChecking():
    while True:
        (username, password) = getLoginInfo()

        try                 : pid = os.fork()
        except OSError, e   : pass

        if not username: os._exit(0)
        if pid == 0: break
        print('%s... [%d]\n' % (username, pid))

    time.sleep(INITIAL_WAIT)
    pid = os.getpid()
    while True:
        maillist = getMailInfo(username, password, pid)
        showDialog(username, maillist, pid)
        time.sleep(PERIOD)



# -----------------------------------------------------------------------------
if __name__ == '__main__':
    startChecking()
