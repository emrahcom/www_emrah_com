#!/usr/bin/python
# -*- coding: utf-8 -*-

# bu dosya /etc/squid3/squid3_auth.py olarak kopyalanacak
# sahibi root, group'u squid3'u calistiran kullanici olacak. Modu 755 seklinde olacak
# /etc/squid3/squid.conf dosyasinda, ilgili yerlere su satirlar eklenecek
#        auth_param basic program /etc/squid3/squid3_auth.py
#        auth_param basic children 5
#        auth_param basic realm Squid proxy-caching web server
#        auth_param basic credentialsttl 2 hours
#        auth_param basic casesensitive on
#
#        acl authenticated proxy_auth REQUIRED
#        http_access deny !authenticated all
#
# PASSWD dosyasinda, her satirinda kullanici:parola olacak sekilde kullanici listesi olacak
# PASSWD dosyasinin sahibi root, group'u squid3'u calistiran kullanici (Debian icin proxy) olacak. Modu 640 olacak

import re
import sys

PASSWD          = '/etc/squid3/passwd.txt'
PATTERN_PASSWD  = re.compile('^([^ ]+):([^ ]+)$')
PATTERN_LOGIN   = re.compile('^([^ ]+) ([^ ]+)$')

# load account info
try:
    account = {}
    d = open(PASSWD, 'r')

    for l in d:
        g = PATTERN_PASSWD.search(l.strip())
        if not g: continue
        account[g.group(1)] = g.group(2)

    d.close()
except:
    pass


# check login info
while True:
    try:
        line        = sys.stdin.readline()
        line        = line.strip()
        g           = PATTERN_LOGIN.search(line)
        if not g: raise RuntimeError

        username    = g.group(1)
        password    = g.group(2)
        if account[username] != password: raise RuntimeError

        sys.stdout.write('OK\n')
    except:
        sys.stdout.write('ERR\n')
    finally:
        sys.stdout.flush()

sys.exit(0)
