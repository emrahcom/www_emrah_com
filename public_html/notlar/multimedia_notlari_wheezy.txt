# -----------------------------------------------------------------------------
# DEB-MULTIMEDIA DEPOSU
# -----------------------------------------------------------------------------

# /etc/apt/sources.list
deb http://www.deb-multimedia.org wheezy main non-free
deb-src http://www.deb-multimedia.org wheezy main non-free

# Keyring
aptitude update
aptitude install deb-multimedia-keyring
aptitude update


# -----------------------------------------------------------------------------
# FFMPEG
# -----------------------------------------------------------------------------

# Kurulum
aptitude install ffmpeg

# İzleme
ffplay -i test.avi

# Sadece ses kanalını izleme
ffplay -f alsa -ac 2 -i hw:0,0
ffplay -f alsa -ac 2 -i default

# Webcam izleme
ffplay  -loglevel quiet -v quiet \
-f video4linux2 -video_size 320x240 -vb 1024k -i /dev/video0

# Ses çevrimi sırasında native AAC kullanılacaksa...
    -c:a libfdk_aac -vbr 1 \
 yerine
    -strict experimental -c:a aac -ac 2 -r:a 48000 -b:a 64k \

# RTMP overlay
ffmpeg -i rtmp://85.111.24.138:1935/tv/trtmuzik \
-i rtmp://85.111.24.138:1935/tv/trthd \
-filter_complex "[1:0]scale=trunc(iw/3):-1 [win]; \
[0:0][win] overlay=(main_w-overlay_w):(main_h-overlay_h)" \
-vprofile baseline -preset ultrafast \
-c:v libx264 -c:a copy \
-map 0:v -map 0:a:0 \
-f flv - \
| ffplay -


# Kaynaklar
http://ffmpeg.org/trac/ffmpeg/wiki/x264EncodingGuide
http://ffmpeg.org/trac/ffmpeg/wiki/AACEncodingGuide
https://sites.google.com/site/linuxencoding/x264-ffmpeg-mapping
http://sonnati.wordpress.com/2011/08/19/ffmpeg-–-the-swiss-army-knife-of-internet-streaming-–-part-iii/



# -----------------------------------------------------------------------------
# MENCODER
# -----------------------------------------------------------------------------

# Kurulum
aptitude install mencoder

# Video capture kartından ve ses kartında yayını alıp kaydetme.
#WIDTH=720
#HEIGHT=480
WIDTH=1024
HEIGHT=600
VBITRATE=$((50 * 25 * $WIDTH * $HEIGHT / 256))

mencoder -nocache -aspect 16:9 tv:// \
-tv driver=v4l2:device=/dev/video0:input=0:normid=5:\
mjpeg:decimation=1:quality=80:\
alsa:adevice=hw.0:forceaudio:audiorate=48000:amode=1:immediatemode=0 \
-ovc lavc -lavcopts vcodec=mpeg4:vhq:vbitrate=$VBITRATE:autoaspect \
-oac copy \
-o test.avi

# Yayını pipe ile aktarma
Sadece son satır değişecek

-o - -really-quiet |



# -----------------------------------------------------------------------------
# MPLAYER && SMPLAYER
# -----------------------------------------------------------------------------

mplayer2 ve smplayer2 paketleri, daha eski ffmpeg kodlarını kullandığı için
performansta düşüklük görüldü.

Video izlerken bazı durumlarda ffplay daha iyi netice vermekte.

# Kurulum
aptitude install mplayer smplayer

# Raspberry Pi izleme
mplayer -nocache -aspect 16:9 \
tv:// -tv driver=v4l2:device=/dev/video0:input=0:normid=0



# -----------------------------------------------------------------------------
# TVTIME
# -----------------------------------------------------------------------------

# Kurulum
aptitude install tvtime

# Izleme
tvtime

# Seste sorun çıkarsa ffplay ile ses kanalını dinle
ffplay -f alsa -ac 2 -i hw:0,0



# -----------------------------------------------------------------------------
# ALSA
# -----------------------------------------------------------------------------

Pulseaudio, ses ve videoyu farklı kanallardan alırken senkron sorununa sebep
oluyor, yüklenmesin.

# Kurulum
aptitude install alsa-base alsa-utils

# Ses kartından grafik kartın HDMI çıktısına sesi embed etmek için
alsamixer ile ses kartı olarak HDMI seçilir. S/PDIF "M" tuşuna basılarak aktif
hale getirilir.

# Line in'den ses alınırken iyi sonuç veren bazı ayarlar:
        Playback
                Master          -> 80
                Headphone       -> 80
                PCM             -> 80
                Front           -> 80
                Front mic       -> MM
                Surround        -> 80
                Center          -> 80
                LFE             -> MM
                Line            -> MM
                CD              -> MM
                S/PDIF          -> MM
                S/PDIF Defa     -> MM
                Dynamic Pow     -> Disabled
                Independent     -> OFF
                Loopback Mi     -> Disabled
                Rear Mic        -> MM
                Smart 5.1       -> MM

        Capture
                Capture         -> 0
                Capture 1       -> 0
                Digital         -> 50
                Input Source    -> Line



# -----------------------------------------------------------------------------
# AVIDEMUX
# -----------------------------------------------------------------------------

# Kurulum
aptitude install avidemux avidemux-cli
aptitude install mjpegtools lame twolame



# -----------------------------------------------------------------------------
# NGINX RTMP MODULE
# -----------------------------------------------------------------------------

# Derleme icin gerekli paketler.
aptitude install dpkg-dev build-essential fakeroot


# Paketlerin alınması

mkdir source
cd source
mkdir nginx nginx_rtmp
cd nginx_rtmp
wget --no-check-certificate https://github.com/arut/nginx-rtmp-module/tarball/master
tar zxf master

cd ../nginx
apt-get source nginx-extras
cp -arp ../nginx_rtmp/arut-nginx-rtmp-module-* nginx-1.2.1/debian/modules/nginx-rtmp-module


# Derleme hazırlıkları

        - vim nginx-1.2.1/debian/rules
        config.status.extras
                ...
                ...
                # satir 170
                --add-module=$(MODULESDIR)/nginx-rtmp-module \

        - build-dep
        su -
        aptitude install libexpat1-dev liblua5.1-0-dev
        aptitude build-dep nginx-extras
        aptitude install libavcodec-dev libavformat-dev libavutil-dev
        exit


# Derleme

cd nginx-1.2.1/
dpkg-buildpackage -rfakeroot -uc -b
cd ..
su
dpkg -i nginx-common_1.2.1-2.2_all.deb
dpkg -i nginx-extras_1.2.1-2.2_i386.deb
aptitude hold nginx-common nginx-extras


# Nginx ayarları
/etc/nginx/nginx.conf
    # worker_process degeri, core sayisi kadar olsun.
    worker_processes 4;

    rtmp_auto_push on;
    rtmp_auto_push_reconnect 1s;
    rtmp_socket_dir /tmp;

    rtmp {
        server {
            listen 1935;
            drop_idle_publisher 10s;

            application live {
                live on;

                # Bir sunucudaki butun streamler cekilecekse...
                # pull rtmp://xxx.www.yyy.zzz:1935;
                # Bir sunucudaki sadece bir stream cekilecekse...
                # pull rtmp://xxx.www.yyy.zzz:1935/live/stream name=stream1 static;

                # Yayin gonderebilecek IP adresleri.
                allow publish 127.0.0.1;
                allow publish X.Y.W.Z;
                deny publish all;
                # Yayini izleyebilecek IP adresleri.
                allow play all;

                # HLS formatinda da yayin yapilacaksa...
                hls on;
                hls_path /var/tmp/hls;
                hls_fragment 10s;
                hls_playlist_length 60s;
                hls_sync 300ms;
                hls_continuous on;
                hls_cleanup on;

                # Yayina baslamak icin key-frame beklenecekse...
                wait_video on;
                wait_key on;

                # Yayini kaydilecekse...
                record all;
                record_path /var/tmp/record;
                record_unique on;
                record_interval 30m;
                record_suffix -%Y%m%d-%T.flv;

                # exec ile push (ffmpeg yuklu olmasi gerekiyor)
                allow play 127.0.0.1;
                exec /home/kullanici/scripts/push.sh
            }
        }
    }


/etc/nginx/sites-available/default
    location /hls {
        alias /var/tmp/hls;
    }

    location /video {
        alias /var/tmp/record;
        autoindex on;
    }

    location /rtmp_stat {
        rtmp_stat all;
        rtmp_stat_stylesheet rtmp_stat.xsl;
    }

    location /rtmp_stat.xsl {
        root /var/tmp/;
    }

    location /rtmp_control {
        rtmp_control all;

        auth_basic "Restricted";
        auth_basic_user_file /home/kullanici/nginx/htpasswd;
    }


- rtmp_stat.xsl
    cp /home/kullanici/source/nginx/nginx-1.2.1/debian/modules/nginx-rtmp-module/stat.xsl /var/tmp/rtmp_stat.xsl
    chown www-data: /var/tmp/rtmp_stat.xsl

    RTMP durumunu takip etmek için:
    http://ip_adresi/rtmp_stat


- rtmp_control
    # Bir izleyiciyi drop etme.
        curl -u user:passwd "http://ip_adresi/rtmp_control/drop/client?app=uygulama_adi&name=yayin_adi&addr=X.Y.W.Z"

    # Bütün izleyicileri drop etme.
        curl -u user:passwd "http://ip_adresi/rtmp_control/drop/client?app=uygulama_adi&name=yayin_adi"

    # Bir yayıncıyı drop etme.
        curl -u user:passwd "http://ip_adresi/rtmp_control/drop/publisher?app=uygulama_adi&name=yayin_adi"


- tmpfs altında hls path
    mkdir /var/tmp/hls
    chown www-data: /var/tmp/hls
    mkdir /var/tmp/record
    chown www-data: /var/tmp/record


- push.sh
    mkdir -p /home/kullanici/scripts
    touch /home/kullanici/scripts/push.sh
    chown www-data: /home/kullanici/scripts/push.sh
    chmod u+x /home/kullanici/scripts/push.sh
    vim /home/kullanici/scripts/push.sh
        #!/bin/bash

        app=$1
        name=$2

        ps aux | egrep ffmpeg | egrep "/$app/" | egrep "/$name " | awk '{ print $2; }' | xargs -iX kill X
        sleep 2
        ffmpeg -i rtmp://localhost:1935/$app/$name -vcodec copy -acodec copy -f flv rtmp://X.Y.V.Z:1935/$app/$name


- restart
    /etc/init.d/nginx configtest
    /etc/init.d/nginx restart


- HLS klasörü ramdisk olacaksa /etc/fstab icinde
tmpfs  /var/tmp/hls  tmpfs  noatime,size=512M,nr_inodes=10k,mode=1777  0  0


- Belli aralıklarla eski video segmentleri temizlenecekse
    /root/scripts/cleanup.sh
    #!/bin/bash
    find /var/tmp/hls/ -type f -name "*.ts" -cmin +5 | xargs -iX rm X

    /etc/crontab
    *  *    * * *   root    /root/scripts/cleanup.sh >/dev/null 2>&1



# -----------------------------------------------------------------------------
# Stream gönderme
# -----------------------------------------------------------------------------

ffmpeg -i mmsh://85.111.3.55/ntv \
-threads 0 -vprofile baseline -preset medium \
-c:v libx264 -b:v 256k -maxrate 256k -bufsize 512k -g 1 \
-c:a libfdk_aac -vbr 1 \
-f flv rtmp://localhost:1935/live/yayin1


# İzleme
ffplay rtmp://localhost:1935/live/yayin1
ffplay http://localhost/hls/yayin1.m3u8


# Kaynaklar
https://github.com/arut/nginx-rtmp-module
http://rarut.wordpress.com/



# -----------------------------------------------------------------------------
# KOMUTLARIN BİRLİKTE KULLANIMI
# -----------------------------------------------------------------------------

# Video ve ses kanallarını alıp RTMP sunucuya gönderme

#!/bin/bash
ASPECT="16:9"
WIDTH=1280
HEIGHT=600
VBITRATE=$((50 * 25 * $WIDTH * $HEIGHT / 256))
DEVICE="/dev/video0"
NORMID=5

mencoder -nocache -aspect $ASPECT tv:// \
-tv driver=v4l2:device=$DEVICE:input=0:normid=$NORMID:\
mjpeg:decimation=1:quality=60:\
alsa:adevice=hw.0:forceaudio:audiorate=48000:amode=1:immediatemode=0 \
-ovc lavc -lavcopts vcodec=mpeg4:vhq:vbitrate=$VBITRATE:autoaspect \
-oac copy \
-o - -really-quiet | \
ffmpeg  -re -i - -threads 0 \
-c:v libx264 -profile:v baseline -preset slow \
-b:v 512k -maxrate 512k -bufsize 1024k -aspect $ASPECT -g 1 \
-c:a libfdk_aac -vbr 1 \
-f flv rtmp://localhost:1935/live/yayin1


# ffplay ile pipe üzerinden izleme local'de izleme

#!/bin/bash
ASPECT="16:9"
WIDTH=1920
HEIGHT=1080
VBITRATE=$((50 * 25 * $WIDTH * $HEIGHT / 256))
DEVICE="/dev/video0"
NORMID=5

mencoder -nocache -aspect $ASPECT tv:// \
-tv driver=v4l2:device=$DEVICE:input=0:normid=$NORMID:\
alsa:adevice=hw.0:forceaudio:audiorate=48000:amode=1:immediatemode=0 \
-ovc lavc -lavcopts vcodec=mpeg4:vhq:vbitrate=$VBITRATE:autoaspect \
-oac copy \
-o - -really-quiet | \
ffmpeg  -re -i - -threads 0 \
-c:v libx264 -profile:v baseline -preset ultrafast -g 1 \
-c:a libfdk_aac -vbr 1 \
-f flv pipe:1 | \
ffplay -f flv -i -


# Sesin, mencoder tarafından işlenmesi istenmiyorsa...

#!/bin/bash
ASPECT="16:9"
WIDTH=1920
HEIGHT=1080
VBITRATE=$((50 * 25 * $WIDTH * $HEIGHT / 256))
DEVICE="/dev/video0"
NORMID=5

mencoder -nocache -aspect $ASPECT tv:// \
-tv driver=v4l2:device=$DEVICE:input=0:normid=$NORMID:\
-ovc lavc -lavcopts vcodec=mpeg4:vhq:vbitrate=$VBITRATE:autoaspect \
-nosound \
-o - -really-quiet | \
ffmpeg  -re -i - \
-f alsa -i default \
-threads 0 \
-vcodec libx264 -vprofile baseline -preset medium \
-b:v 512k -maxrate 512k -bufsize 1024k -aspect $ASPECT -g 1 \
-c:a libfdk_aac -vbr 1 \
-f flv rtmp://localhost:1935/live/yayin1



# -----------------------------------------------------------------------------
# AMAZON EC2
# -----------------------------------------------------------------------------

# Debian Wheezy makine
        Ireland
        ami-d81b12ac
        379101102735/debian-wheezy-amd64-20130208
        Default user: admin



# -----------------------------------------------------------------------------
# NGINX İLE ŞARTLI STREAM İZLEME
# -----------------------------------------------------------------------------

# Kurulumlar
    aptitude install python-geoip
    aptitude install uwsgi uwsgi-plugin-python


# Python kontrol kodu
/home/kullanici/wsgi/geocheck.py
    #!/usr/bin/python
    #-*- coding: utf-8 -*-

    import GeoIP
    from cgi import parse_qs

    ENABLE_GEOIP = True
    ALLOWED_COUNTRIES = ['TR', 'US']

    def application(environ, start_response):
        # Izleyici IP adresini al.
        args = parse_qs(env['wsgi.input'].read())
        addr = args.get('addr', [''])[0]

        # Izleyici ulke kodunu al.
        g = GeoIP.open('/usr/share/GeoIP/GeoIP.dat', GeoIP.GEOIP_STANDARD)
        country = g.country_code_by_addr(addr)

        # Ziyaretci, izin verilen bir ulkede ise onay mesajini hazirla.
        if not ENABLE_GEOIP or country in ALLOWED_COUNTRIES:
            status = '200 OK'
            output = 'OK'
        else:
            status = '500 ERROR'
            output = 'error'

        # Onay veya red cevabi dondur.
        response_headers = [('Content-type', 'text/plain'),
                            ('Content-Length', str(len(output)))]
        start_response(status, response_headers)
        return [output]


# UWSGI ayarları
/etc/uwsgi/apps-available/geocheck.ini
    [uwsgi]
    plugins = python
    uid = www-data
    gid = www-data
    master = true
    socket=/var/run/uwsgi/app/geocheck/socket
    wsgi-file = /home/kullanici/wsgi/geocheck.py

cd /etc/uwsgi/apps-enabled
ln -s ../apps-available/geocheck.ini .
/etc/init.d/uwsgi restart


# Stream'i izlemek isteyenlerin kontrol sayfasına yönlendirilmesi
/etc/nginx/nginx.conf
    rtmp {
        server {
            listen 1935;

            application live {
                live on;
                on_play http://localhost/geocheck;
        ...
        ...
    }


/etc/nginx/sites-enabled/default
    location /geocheck {
        include uwsgi_params;
        uwsgi_pass unix:/var/run/uwsgi/app/geocheck/socket;
    }



# Kaynaklar
https://github.com/arut/nginx-rtmp-module/wiki/Directives
# RTMP/RTSP/MMS/M3U8 adresleri
http://radyodelisi.blogspot.com/
