Python Oracle Notları (cx_Oracle)
--------------------------------

. Linkler
        http://cx-oracle.sourceforge.net/
        http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html
        http://www.oracle.com/technetwork/articles/dsl/python-091105.html
        (Oracle sitesi için kullanici adi email ile, parolada ilk harf büyük)


. Yükleme
        . Gerekli Debian paketleri
        su -
        aptitude install libaio1 alien fakeroot
        exit

        . Oracle InstantClient kurulumu
        #rpm paketlerini deb paketlerine çevirme
        fakeroot alien oracle-instantclient11.2-basic-11.2.0.2.0.i386.rpm
        fakeroot alien oracle-instantclient11.2-devel-11.2.0.2.0.i386.rpm
        fakeroot alien oracle-instantclient11.2-sqlplus-11.2.0.2.0.i386.rpm

        # deb paketlerini yükleme
        su
        dpkg -i oracle-instantclient11.2-basic_11.2.0.2.0-2_i386.deb
        dpkg -i oracle-instantclient11.2-devel_11.2.0.2.0-2_i386.deb
        dpkg -i oracle-instantclient11.2-sqlplus_11.2.0.2.0-2_i386.deb

        # library
        dpkg -L oracle-instantclient11.2-basic
                ...
                /usr/lib/oracle/11.2/client/lib         <<<
                ...

        vim /etc/ld.so.conf.d/oracle.conf
                /usr/lib/oracle/11.2/client/lib

        ldconfig
        exit

        # test
        sqlplus <user>/<password>@<ip_address_oracle_server>:1521/<database_name_>
        SQL> select * from v$version;


        . cx_Oracle rpm2deb
        fakeroot alien cx_Oracle-5.1-11g-py26-1.i386.rpm

        . cx_Oracle kurulumu
        su
        dpkg -i cx-oracle_5.1-2_i386.deb
        ln -s ../site-packages/cx_Oracle.so /usr/lib/python2.6/lib-dynload/
        exit

        . cx_Oracle test
        python
                >>> import cx_Oracle
                >>>


. Kod
        import cx_Oracle
        cnn = cx_Oracle.connect('pythonhol/welcome@127.0.0.1/orcl')
        cur = cnn.cursor()
        sql = """ SELECT *
                  FROM table
                  WHERE t_id = :id """
        cur.prepare(sql)

        cur.execute(None, {'id': 100})
        res = cur.fetchall()
        print(res)
        cur.execute(None, {'id': 100})
        res = cur.fetchall()
        print(res)

        sql = """ INSERT INTO table
                  VALUES (:1, :2) """
        cur.execute(sql, ('1', 'test'))
        cnn.commit()

        cur.close()
        cnn.close()
